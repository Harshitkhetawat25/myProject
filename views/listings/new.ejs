<% layout("layouts/boilerplate") %>
<style>
    * {
        box-sizing: border-box;
    }

    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        min-height: 100vh;
        margin: 0;
        padding: 20px 0;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .form-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 24px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1), 0 8px 32px rgba(31, 38, 135, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.18);
        overflow: hidden;
        animation: slideUp 0.8s ease-out;
    }

    @keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .form-header {
        background: linear-gradient(135deg, #ff385c 0%, #e61e4d 100%);
        padding: 40px 40px 30px;
        color: white;
        position: relative;
        overflow: hidden;
    }

    .form-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.05)" stroke-width="1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
        animation: float 20s linear infinite;
    }

    @keyframes float {
        0% { transform: rotate(0deg) translateX(0px); }
        100% { transform: rotate(360deg) translateX(10px); }
    }

    .form-header h1 {
        margin: 0;
        font-size: 2.5rem;
        font-weight: 700;
        position: relative;
        z-index: 1;
    }

    .form-header p {
        margin: 10px 0 0;
        font-size: 1.1rem;
        opacity: 0.9;
        position: relative;
        z-index: 1;
    }

    .form-body {
        padding: 40px;
    }

    .form-section {
        margin-bottom: 32px;
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #222;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .section-icon {
        width: 24px;
        height: 24px;
        background: linear-gradient(135deg, #ff385c, #e61e4d);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 12px;
    }

    .form-group {
        margin-bottom: 24px;
        position: relative;
    }

    .form-label {
        display: block;
        font-weight: 600;
        color: #484848;
        margin-bottom: 8px;
        font-size: 0.95rem;
        transition: color 0.3s ease;
    }

    .form-control, .form-select {
        width: 100%;
        padding: 16px 20px;
        border: 2px solid #e0e0e0;
        border-radius: 12px;
        font-size: 1rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        background: #fafafa;
        color: #484848;
    }

    .form-control:focus, .form-select:focus {
        outline: none;
        border-color: #ff385c;
        background: white;
        box-shadow: 0 0 0 4px rgba(255, 56, 92, 0.1);
        transform: translateY(-2px);
    }

    .form-control:hover, .form-select:hover {
        border-color: #c0c0c0;
        background: white;
    }

    textarea.form-control {
        min-height: 120px;
        resize: vertical;
        font-family: inherit;
    }

    .file-upload-container {
        position: relative;
        border: 2px dashed #e0e0e0;
        border-radius: 12px;
        padding: 40px 20px;
        text-align: center;
        background: #fafafa;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .file-upload-container:hover {
        border-color: #ff385c;
        background: rgba(255, 56, 92, 0.02);
    }

    .file-upload-container.dragover {
        border-color: #ff385c;
        background: rgba(255, 56, 92, 0.05);
        transform: scale(1.02);
    }

    .file-upload-icon {
        font-size: 2.5rem;
        color: #c0c0c0;
        margin-bottom: 16px;
    }

    .file-upload-text {
        font-size: 1.1rem;
        color: #484848;
        margin-bottom: 8px;
    }

    .file-upload-subtext {
        font-size: 0.9rem;
        color: #a0a0a0;
    }

    #image {
        position: absolute;
        opacity: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 20px;
        align-items: start;
    }

    .location-row {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 20px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #ff385c 0%, #e61e4d 100%);
        border: none;
        color: white;
        padding: 18px 40px;
        font-size: 1.1rem;
        font-weight: 600;
        border-radius: 12px;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        width: 100%;
        position: relative;
        overflow: hidden;
    }

    .btn-primary::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .btn-primary:hover::before {
        left: 100%;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 24px rgba(255, 56, 92, 0.3);
    }

    .btn-primary:active {
        transform: translateY(0);
    }

    .invalid-feedback {
        display: block;
        color: #e74c3c;
        font-size: 0.875rem;
        margin-top: 8px;
        opacity: 0;
        transform: translateY(-10px);
        transition: all 0.3s ease;
    }

    .was-validated .form-control:invalid ~ .invalid-feedback,
    .was-validated .form-select:invalid ~ .invalid-feedback {
        opacity: 1;
        transform: translateY(0);
    }

    .was-validated .form-control:invalid,
    .was-validated .form-select:invalid {
        border-color: #e74c3c;
        background: rgba(231, 76, 60, 0.05);
    }

    .was-validated .form-control:valid,
    .was-validated .form-select:valid {
        border-color: #27ae60;
        background: rgba(39, 174, 96, 0.05);
    }

    .progress-bar {
        height: 4px;
        background: #e0e0e0;
        border-radius: 2px;
        overflow: hidden;
        margin-bottom: 30px;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #ff385c, #e61e4d);
        width: 0%;
        transition: width 0.3s ease;
        border-radius: 2px;
    }

    @media (max-width: 768px) {
        .container {
            padding: 0 16px;
        }
        
        .form-body {
            padding: 30px 24px;
        }
        
        .form-header {
            padding: 30px 24px 20px;
        }
        
        .form-header h1 {
            font-size: 2rem;
        }
        
        .form-row, .location-row {
            grid-template-columns: 1fr;
            gap: 16px;
        }
        
        .btn-primary {
            padding: 16px 30px;
        }
    }

    .tooltip {
        position: relative;
        display: inline-block;
        margin-left: 8px;
        cursor: help;
    }

    .tooltip .tooltiptext {
        visibility: hidden;
        width: 200px;
        background-color: #333;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 8px;
        position: absolute;
        z-index: 1;
        bottom: 125%;
        left: 50%;
        margin-left: -100px;
        opacity: 0;
        transition: opacity 0.3s;
        font-size: 0.8rem;
    }

    .tooltip:hover .tooltiptext {
        visibility: visible;
        opacity: 1;
    }
</style>

<div class="container">
    <div class="form-card">
        <div class="form-header">
            <h1>Create Your Listing</h1>
            <p>Share your space with travelers from around the world</p>
        </div>
        
        <div class="form-body">
            <div class="progress-bar">
                <div class="progress-fill" id="progressFill"></div>
            </div>
            
            <form method="POST" action="/listings" enctype="multipart/form-data" class="needs-validation" novalidate id="listingForm">
                
                <div class="form-section">
                    <div class="section-title">
                        <div class="section-icon">1</div>
                        Basic Information
                    </div>
                    
                    <div class="form-group">
                        <label for="title" class="form-label">
                            Property Title
                            <div class="tooltip">ⓘ
                                <span class="tooltiptext">Create a catchy title that highlights your property's best features</span>
                            </div>
                        </label>
                        <input name="listing[title]" id="title" type="text" class="form-control" required placeholder="e.g., Cozy Downtown Apartment with City Views">
                        <div class="invalid-feedback">Please enter a compelling title for your listing</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="description" class="form-label">
                            Description
                            <div class="tooltip">ⓘ
                                <span class="tooltiptext">Describe your space, amenities, and what makes it special</span>
                            </div>
                        </label>
                        <textarea name="listing[description]" id="description" class="form-control" required placeholder="Tell guests about your space. What makes it unique? What amenities do you offer? What's the neighborhood like?"></textarea>
                        <div class="invalid-feedback">Please provide a detailed description of your property</div>
                    </div>
                </div>

                <div class="form-section">
                    <div class="section-title">
                        <div class="section-icon">2</div>
                        Photos & Details
                    </div>
                    
                    <div class="form-group">
                        <label for="image" class="form-label">Property Photos</label>
                        <div class="file-upload-container" onclick="document.getElementById('image').click()">
                            <div class="file-upload-icon">📸</div>
                            <div class="file-upload-text">Click to upload photos</div>
                            <div class="file-upload-subtext">or drag and drop your images here</div>
                            <input name="image" id="image" type="file" accept="image/*" multiple>
                        </div>
                        <div class="invalid-feedback">Please upload at least one high-quality photo</div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="price" class="form-label">
                                Price per Night
                                <div class="tooltip">ⓘ
                                    <span class="tooltiptext">Set a competitive price based on your location and amenities</span>
                                </div>
                            </label>
                            <input name="listing[price]" id="price" type="number" min="0" class="form-control" required placeholder="₹ 0">
                            <div class="invalid-feedback">Please enter a valid price per night</div>
                        </div>
                        
                        <div class="form-group">
                            <label for="category" class="form-label">Property Category</label>
                            <select name="listing[category]" id="category" class="form-select" required>
                                <option value="" disabled selected>Choose a category</option>
                                <% ["Trending", "Rooms", "Iconic cities", "Mountains", "Castles", "Amazing Pools", "Camping", "Farms", "Arctic", "Boats", "Domes"].forEach(cat => { %>
                                    <option value="<%= cat %>"><%= cat %></option>
                                <% }) %>
                            </select>
                            <div class="invalid-feedback">Please select a property category</div>
                        </div>
                    </div>
                </div>

                <div class="form-section">
                    <div class="section-title">
                        <div class="section-icon">3</div>
                        Location Details
                    </div>
                    
                    <div class="location-row">
                        <div class="form-group">
                            <label for="location" class="form-label">
                                Address/Location
                                <div class="tooltip">ⓘ
                                    <span class="tooltiptext">Provide the specific location or neighborhood</span>
                                </div>
                            </label>
                            <input name="listing[location]" id="location" type="text" class="form-control" required placeholder="e.g., Connaught Place, New Delhi">
                            <div class="invalid-feedback">Please enter the property location</div>
                        </div>
                        
                        <div class="form-group">
                            <label for="country" class="form-label">Country</label>
                            <input name="listing[country]" id="country" type="text" class="form-control" required placeholder="e.g., India">
                            <div class="invalid-feedback">Please enter the country</div>
                        </div>
                    </div>
                </div>

                <button type="submit" class="btn-primary">
                    Create Listing
                </button>
            </form>
        </div>
    </div>
</div>

<script>
    (function () {
        'use strict';
        
        const form = document.querySelector('.needs-validation');
        const progressFill = document.getElementById('progressFill');
        const inputs = form.querySelectorAll('input[required], select[required], textarea[required]');
        
        // File upload drag and drop
        const fileUpload = document.querySelector('.file-upload-container');
        const fileInput = document.getElementById('image');
        
        fileUpload.addEventListener('dragover', (e) => {
            e.preventDefault();
            fileUpload.classList.add('dragover');
        });
        
        fileUpload.addEventListener('dragleave', () => {
            fileUpload.classList.remove('dragover');
        });
        
        fileUpload.addEventListener('drop', (e) => {
            e.preventDefault();
            fileUpload.classList.remove('dragover');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                fileInput.files = files;
                updateFileUploadText(files[0].name);
            }
        });
        
        fileInput.addEventListener('change', (e) => {
            if (e.target.files.length > 0) {
                updateFileUploadText(e.target.files[0].name);
            }
        });
        
        function updateFileUploadText(filename) {
            const textEl = fileUpload.querySelector('.file-upload-text');
            const subtextEl = fileUpload.querySelector('.file-upload-subtext');
            textEl.textContent = `Selected: ${filename}`;
            subtextEl.textContent = 'Click to change or add more photos';
        }
        
        // Progress tracking
        function updateProgress() {
            let filledInputs = 0;
            inputs.forEach(input => {
                if (input.type === 'file') {
                    if (input.files && input.files.length > 0) filledInputs++;
                } else if (input.value.trim() !== '') {
                    filledInputs++;
                }
            });
            const progress = (filledInputs / inputs.length) * 100;
            progressFill.style.width = progress + '%';
        }
        
        inputs.forEach(input => {
            input.addEventListener('input', updateProgress);
            input.addEventListener('change', updateProgress);
        });
        
        // Form validation
        form.addEventListener('submit', (event) => {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
                
                // Smooth scroll to first invalid field
                const firstInvalid = form.querySelector(':invalid');
                if (firstInvalid) {
                    firstInvalid.scrollIntoView({ 
                        behavior: 'smooth', 
                        block: 'center' 
                    });
                    firstInvalid.focus();
                }
            }
            form.classList.add('was-validated');
        }, false);
        
        // Real-time validation feedback
        inputs.forEach(input => {
            input.addEventListener('blur', () => {
                if (input.value.trim() !== '' || input.type === 'file') {
                    input.parentElement.classList.add('was-validated');
                }
            });
            
            input.addEventListener('input', () => {
                if (input.parentElement.classList.contains('was-validated')) {
                    // Re-validate on input change
                    input.setCustomValidity('');
                    if (!input.checkValidity()) {
                        input.setCustomValidity('Invalid');
                    }
                }
            });
        });
        
        // Initialize progress
        updateProgress();
    })();
</script>